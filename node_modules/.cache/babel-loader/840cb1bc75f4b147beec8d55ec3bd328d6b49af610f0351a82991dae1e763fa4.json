{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Umfrage erstellen\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"umfrage-name\"\n}, \"Name der Umfrage:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", null, [_createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"umfrage-name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.umfrageName = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.umfrageName]])]), _hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => (this.$router.push('/fragenErstellen'), $setup.addUmfrage()))\n  }, \"Fragen erstellen\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => (this.$router.push('/erstelleUmfrageAusTemplate'), $setup.addUmfrage()))\n  }, \"Erstelle aus einem Template\")])]);\n}","map":{"version":3,"names":["_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","type","id","$setup","umfrageName","$event","required","_hoisted_3","onClick","_cache","$router","push","addUmfrage"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenErstellen.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Umfrage erstellen</h1>\n      <form>\n        <div>\n          <label for=\"umfrage-name\">Name der Umfrage:</label>\n          <input type=\"text\" id=\"umfrage-name\" v-model=\"umfrageName\" required>\n        </div>\n        <br>\n        <button @click=\"this.$router.push('/fragenErstellen'), addUmfrage()\">Fragen erstellen</button>\n        <button @click=\"this.$router.push('/erstelleUmfrageAusTemplate'), addUmfrage()\">Erstelle aus einem Template</button>\n      </form>\n    </div>\n  </template>\n  \n  <script setup>\n\n  import { ref, computed, onMounted, resolveDirective } from 'vue'\n  import { doc, addDoc, collection, setDoc} from 'firebase/firestore';\n  import { db } from '@/firebase'\n  const umfrageName = ref('')\n  const umfragenCollectionRef = collection(db, 'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen')\n\n\n  const addUmfrage = async () => {\n        // create a new document with ID \"Test3\" in the \"Umfragen\" collection\n        const umfrageDocRef = doc(umfragenCollectionRef, umfrageName.value)\n        await setDoc(umfrageDocRef, {})\n        sessionStorage.setItem('umfragenName', umfrageName.value)\n        console.log(sessionStorage.getItem('umfragenName'))\n        /*\n        const fragenCollectionRef = collection(umfrageDocRef, 'Fragen')\n        await addDoc(fragenCollectionRef, {})\n        */\n    }\n\n  </script>\n  "],"mappings":";;gCAEMA,mBAAA,CAA0B,YAAtB,mBAAiB;gCAGjBA,mBAAA,CAAmD;EAA5CC,GAAG,EAAC;AAAc,GAAC,mBAAiB;gCAG7CD,mBAAA,CAAI;;;uBAPRE,mBAAA,CAWM,cAVJC,UAA0B,EAC1BH,mBAAA,CAQO,eAPLA,mBAAA,CAGM,cAFJI,UAAmD,E,gBACnDJ,mBAAA,CAAoE;IAA7DK,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,cAAc;+DAAUC,MAAA,CAAAC,WAAW,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAbH,MAAA,CAAAC,WAAW,E,KAE3DG,UAAI,EACJX,mBAAA,CAA8F;IAArFY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAJ,MAAA,UAAOK,OAAO,CAACC,IAAI,sBAAsBR,MAAA,CAAAS,UAAU;KAAI,kBAAgB,GACrFhB,mBAAA,CAAoH;IAA3GY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAJ,MAAA,UAAOK,OAAO,CAACC,IAAI,iCAAiCR,MAAA,CAAAS,UAAU;KAAI,6BAA2B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}