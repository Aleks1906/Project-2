{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fe2206d8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"view-main-content\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"view-main-content-heading\"\n}, \"Übersicht aller Umfragen\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  id: \"umfragenTemplate\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    placeholder: \"Umfragen durchsuchen\",\n    class: \"view-main-content-textfield\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredUmfragen, (umfragenarray, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      id: \"umfragenContainer\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(umfragenarray, umfrage => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n        onClick: $event => ($setup.writeToSessionStorage(umfrage, $setup.hilfeAdmins[index][0]), this.$router.push('/beantworten'))\n      }, [_createElementVNode(\"h2\", null, _toDisplayString(umfrage), 1 /* TEXT */), _createTextVNode(\" erstellt von: \" + _toDisplayString($setup.hilfeAdmins[index][0]), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_4)]);\n    }), 256 /* UNKEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","type","$setup","searchQuery","$event","placeholder","_Fragment","_renderList","filteredUmfragen","umfragenarray","index","key","umfrage","_hoisted_3","onClick","writeToSessionStorage","hilfeAdmins","$router","push","_toDisplayString"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenÜbersichtUser.vue"],"sourcesContent":["<template>\n    <div class=\"view-main-content\">\n      <h1 class=\"view-main-content-heading\">Übersicht aller Umfragen</h1>\n      <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Umfragen durchsuchen\" class=\"view-main-content-textfield\">\n      <div v-for=\"(umfragenarray, index) in filteredUmfragen\" :key=\"index\" id=\"umfragenContainer\">\n        <div v-for=\"(umfrage) in umfragenarray\" id=\"umfragenTemplate\">\n          <button @click=\"writeToSessionStorage(umfrage, hilfeAdmins[index][0]), this.$router.push('/beantworten')\">\n            <h2> {{ umfrage }} </h2>\n            erstellt von: {{ hilfeAdmins[index][0]}}\n          </button>\n        </div>\n      </div>\n    </div>\n  </template>\n\n  <style scoped>\n    button {\n      color: var(--text_dark_background);\n      font-weight: bold;\n      background: transparent;\n      border: 3px solid var(--text_dark_background);\n      cursor: pointer;\n      margin-bottom: 1em;\n      padding: .7rem 1rem;\n      border-radius: 10px;\n      transition: 500ms;\n    }\n\n    button:hover {\n      transform: scale(1.02);\n      transition: 300ms;\n      color: var(--polly_accent_yellow);\n    }\n\n    #umfragenContainer {\n      width: 70%;\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: space-between;\n    }\n\n    #umfragenTemplate {\n      width: 45%;\n    }\n\n    #umfragenTemplate > button {\n      width: 100%;\n      height: 8rem;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n    }\n\n\n\n    #umfragenTemplate h2 {\n      margin-top: 0;\n    }\n\n    \n\n\n  </style>\n  \n  <script setup>\n  import { ref, computed, onMounted } from 'vue'\n  import { collection, onSnapshot } from 'firebase/firestore'\n  import { db } from '@/firebase'\n  \n  const umfragenCollectionRef = collection(db,'AlleUmfragen')\n  const admins = ref([])\n  const umfragen = ref([])\n  const hilfeAdmins = ref([])\n  const searchQuery = ref('')\n  \n  onMounted(() => {\n    onSnapshot(umfragenCollectionRef, (querySnapshot) => {\n      const allAdmins = []\n      const allSurveys = []\n      querySnapshot.forEach((doc) => {\n        console.log(\"All Aminds \" + doc.id)\n        allAdmins.push(doc.id)\n        console.log(\"allAdmins\" + allAdmins)\n      })\n      admins.value = allAdmins\n      console.log(\"Admins.value \" + admins.value)\n      admins.value.forEach((admin, index) => {\n        const adminCollectionRef = collection(db, 'AlleUmfragen', admin, 'Umfragen')\n        console.log(\"Admincollectionref \" + adminCollectionRef)\n        onSnapshot(adminCollectionRef, (querySnapshot) => {\n          const surveys = []\n          const helper = []\n          querySnapshot.forEach((doc) => {\n            surveys.push(doc.id)\n            helper.push(admin)\n          })\n          hilfeAdmins.value[index] = helper\n          umfragen.value[index] = surveys\n          console.log(\"Hilfe Admins: \" + hilfeAdmins.value)\n          console.log(\"umfragen.value: \" + umfragen.value)\n          console.log(\"Admins: \" + admins.value)\n        })\n      })\n    })\n  })\n  \n  const filteredUmfragen = computed(() => {\n    const query = searchQuery.value.toLowerCase()\n    if (query === '') {\n      return umfragen.value\n    } else {\n      return umfragen.value.map((umfragenarray) => {\n        return umfragenarray.filter((umfrage) => {\n          return umfrage.toLowerCase().includes(query)\n        })\n      })\n    }\n  })\n  \n  const writeToSessionStorage = (umfrage, admin) => {\n    sessionStorage.setItem('umfrageBeantworten', umfrage);\n    sessionStorage.setItem('adminBeantworten', admin);\n  }\n  \n  </script>\n  "],"mappings":";;;;EACSA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAAmE;EAA/DD,KAAK,EAAC;AAA2B,GAAC,0BAAwB;;EAGpBE,EAAE,EAAC;AAAkB;;;uBAJjEC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAmE,E,gBACnEJ,mBAAA,CAAgH;IAAzGK,IAAI,EAAC,MAAM;+DAAUC,MAAA,CAAAC,WAAW,GAAAC,MAAA;IAAEC,WAAW,EAAC,sBAAsB;IAACV,KAAK,EAAC;iDAAtDO,MAAA,CAAAC,WAAW,E,sBACvCL,mBAAA,CAOMQ,SAAA,QAAAC,WAAA,CAPgCL,MAAA,CAAAM,gBAAgB,GAAzCC,aAAa,EAAEC,KAAK;yBAAjCZ,mBAAA,CAOM;MAPmDa,GAAG,EAAED,KAAK;MAAEb,EAAE,EAAC;2BACtEC,mBAAA,CAKMQ,SAAA,QAAAC,WAAA,CALmBE,aAAa,EAAzBG,OAAO;2BAApBd,mBAAA,CAKM,OALNe,UAKM,GAJJjB,mBAAA,CAGS;QAHAkB,OAAK,EAAAV,MAAA,KAAEF,MAAA,CAAAa,qBAAqB,CAACH,OAAO,EAAEV,MAAA,CAAAc,WAAW,CAACN,KAAK,YAAYO,OAAO,CAACC,IAAI;UACtFtB,mBAAA,CAAwB,YAAAuB,gBAAA,CAAhBP,OAAO,kB,iBAAS,iBACV,GAAAO,gBAAA,CAAGjB,MAAA,CAAAc,WAAW,CAACN,KAAK,qB"},"metadata":{},"sourceType":"module","externalDependencies":[]}