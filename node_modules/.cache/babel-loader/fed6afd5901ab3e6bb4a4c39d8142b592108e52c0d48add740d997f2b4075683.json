{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, resolveDirective } from 'vue';\nimport { collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  __name: 'UmfragenÜbersichtUser',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const umfragenCollectionRef = collection(db, 'AlleUmfragen');\n    const admins = ref([]);\n    const umfragen = ref([]);\n    const hilfeAdmins = ref([]);\n    onMounted(() => {\n      onSnapshot(umfragenCollectionRef, querySnapshot => {\n        const allAdmins = [];\n        const allSurveys = [];\n        querySnapshot.forEach(doc => {\n          console.log(\"All Aminds \" + doc.id);\n          allAdmins.push(doc.id);\n          console.log(\"allAdmins\" + allAdmins);\n        });\n        admins.value = allAdmins;\n        console.log(\"Admins.value \" + admins.value);\n        admins.value.forEach((admin, index) => {\n          const adminCollectionRef = collection(db, 'AlleUmfragen', admin, 'Umfragen');\n          console.log(\"Admincollectionref \" + adminCollectionRef);\n          onSnapshot(adminCollectionRef, querySnapshot => {\n            const surveys = [];\n            const helper = [];\n            querySnapshot.forEach(doc => {\n              surveys.push(doc.id);\n              helper.push(admin);\n            });\n            hilfeAdmins.value[index] = helper;\n            umfragen.value[index] = surveys;\n            console.log(\"Hilfe Admins: \" + hilfeAdmins.value);\n            console.log(\"umfragen.value: \" + umfragen.value);\n            console.log(\"Admins: \" + admins.value);\n          });\n        });\n      });\n    });\n    const writeToSessionStorage = (umfrage, admin) => {\n      sessionStorage.setItem('umfrageBeantworten', umfrage);\n      sessionStorage.setItem('adminBeantworten', admin);\n    };\n    const __returned__ = {\n      umfragenCollectionRef,\n      admins,\n      umfragen,\n      hilfeAdmins,\n      writeToSessionStorage,\n      ref,\n      computed,\n      onMounted,\n      resolveDirective,\n      get collection() {\n        return collection;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get doc() {\n        return doc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get FieldValue() {\n        return FieldValue;\n      },\n      get arrayUnion() {\n        return arrayUnion;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","resolveDirective","collection","onSnapshot","doc","updateDoc","FieldValue","arrayUnion","getFirestore","db","umfragenCollectionRef","admins","umfragen","hilfeAdmins","querySnapshot","allAdmins","allSurveys","forEach","console","log","id","push","value","admin","index","adminCollectionRef","surveys","helper","writeToSessionStorage","umfrage","sessionStorage","setItem"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenÜbersichtUser.vue"],"sourcesContent":["<template>\n    <h1>Übersicht aller Umfragen</h1>\n    <div v-for=\"(umfragenarray, index) in umfragen\" :key=\"index\">\n      <div v-for=\"(umfrage) in umfragenarray\" >\n        <button @click=\"writeToSessionStorage(umfrage, hilfeAdmins[index][0]), this.$router.push('/beantworten')\">\n          {{ umfrage }} - {{ hilfeAdmins[index][0]}}\n          <!-- irgendwie müssen wir hier diese beiden Werte mitgeben, damit bei der Beantwortung die richtige Route ausgewählt wird.-->\n        </button>\n      </div>\n    </div>\n</template>\n  \n<script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore} from 'firebase/firestore';\n    import { db } from '@/firebase'\n \n    const umfragenCollectionRef = collection(db,'AlleUmfragen')\n    const admins = ref([])\n    const umfragen = ref([])\n    const hilfeAdmins = ref([])\n\n    onMounted(() => {\n    onSnapshot(umfragenCollectionRef, (querySnapshot) => {\n      const allAdmins = []\n      const allSurveys = []\n      querySnapshot.forEach((doc) => {\n        console.log(\"All Aminds \" + doc.id)\n        allAdmins.push(doc.id)\n        console.log(\"allAdmins\" + allAdmins)\n      })\n      admins.value = allAdmins\n      console.log(\"Admins.value \" + admins.value)\n      admins.value.forEach((admin, index) => {\n        const adminCollectionRef = collection(db, 'AlleUmfragen', admin, 'Umfragen')\n        console.log(\"Admincollectionref \" + adminCollectionRef)\n        onSnapshot(adminCollectionRef, (querySnapshot) => {\n          const surveys = []\n          const helper = []\n          querySnapshot.forEach((doc) => {\n            surveys.push(doc.id)\n            helper.push(admin)\n          })\n          hilfeAdmins.value[index] = helper\n          umfragen.value[index] = surveys\n          console.log(\"Hilfe Admins: \" + hilfeAdmins.value)\n          console.log(\"umfragen.value: \" + umfragen.value)\n          console.log(\"Admins: \" + admins.value)\n        })\n      })\n    })\n  })\n\n    const writeToSessionStorage = (umfrage, admin) => {\n        sessionStorage.setItem('umfrageBeantworten', umfrage);\n        sessionStorage.setItem('adminBeantworten', admin);\n    }\n</script>"],"mappings":";AAaI,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,KAAK;AAChE,SAAQC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAO,oBAAoB;AAC/G,SAASC,EAAE,QAAQ,YAAY;;;;;;;IAE/B,MAAMC,qBAAqB,GAAGR,UAAU,CAACO,EAAE,EAAC,cAAc,CAAC;IAC3D,MAAME,MAAM,GAAGb,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMc,QAAQ,GAAGd,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMe,WAAW,GAAGf,GAAG,CAAC,EAAE,CAAC;IAE3BE,SAAS,CAAC,MAAM;MAChBG,UAAU,CAACO,qBAAqB,EAAGI,aAAa,IAAK;QACnD,MAAMC,SAAS,GAAG,EAAE;QACpB,MAAMC,UAAU,GAAG,EAAE;QACrBF,aAAa,CAACG,OAAO,CAAEb,GAAG,IAAK;UAC7Bc,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGf,GAAG,CAACgB,EAAE,CAAC;UACnCL,SAAS,CAACM,IAAI,CAACjB,GAAG,CAACgB,EAAE,CAAC;UACtBF,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGJ,SAAS,CAAC;QACtC,CAAC,CAAC;QACFJ,MAAM,CAACW,KAAK,GAAGP,SAAS;QACxBG,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGR,MAAM,CAACW,KAAK,CAAC;QAC3CX,MAAM,CAACW,KAAK,CAACL,OAAO,CAAC,CAACM,KAAK,EAAEC,KAAK,KAAK;UACrC,MAAMC,kBAAkB,GAAGvB,UAAU,CAACO,EAAE,EAAE,cAAc,EAAEc,KAAK,EAAE,UAAU,CAAC;UAC5EL,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGM,kBAAkB,CAAC;UACvDtB,UAAU,CAACsB,kBAAkB,EAAGX,aAAa,IAAK;YAChD,MAAMY,OAAO,GAAG,EAAE;YAClB,MAAMC,MAAM,GAAG,EAAE;YACjBb,aAAa,CAACG,OAAO,CAAEb,GAAG,IAAK;cAC7BsB,OAAO,CAACL,IAAI,CAACjB,GAAG,CAACgB,EAAE,CAAC;cACpBO,MAAM,CAACN,IAAI,CAACE,KAAK,CAAC;YACpB,CAAC,CAAC;YACFV,WAAW,CAACS,KAAK,CAACE,KAAK,CAAC,GAAGG,MAAM;YACjCf,QAAQ,CAACU,KAAK,CAACE,KAAK,CAAC,GAAGE,OAAO;YAC/BR,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGN,WAAW,CAACS,KAAK,CAAC;YACjDJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGP,QAAQ,CAACU,KAAK,CAAC;YAChDJ,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGR,MAAM,CAACW,KAAK,CAAC;UACxC,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEA,MAAMM,qBAAqB,GAAGA,CAACC,OAAO,EAAEN,KAAK,KAAK;MAC9CO,cAAc,CAACC,OAAO,CAAC,oBAAoB,EAAEF,OAAO,CAAC;MACrDC,cAAc,CAACC,OAAO,CAAC,kBAAkB,EAAER,KAAK,CAAC;IACrD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}