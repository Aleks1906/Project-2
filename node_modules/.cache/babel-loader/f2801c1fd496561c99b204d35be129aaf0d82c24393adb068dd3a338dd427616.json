{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b5172c74\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"view-main-content\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"view-main-content-heading\"\n}, \"Übersicht aller Templates\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  id: \"template-container\"\n};\nconst _hoisted_4 = {\n  class: \"view-main-content-heading\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Dieses Template enthält folgende Fragen: \", -1 /* HOISTED */));\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.templates, (template, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      id: \"template\",\n      class: \"textbox\"\n    }, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString(template), 1 /* TEXT */), _hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.fragen[index], frage => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString(frage), 1 /* TEXT */)]);\n    }), 256 /* UNKEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n      onClick: $event => ($setup.createFrageInFirebase(template), this.$router.push('/umfrageWurdeErstellt')),\n      class: \"view-main-content-advanceBtn\"\n    }, \" Template auswählen \", 8 /* PROPS */, _hoisted_6)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","templates","template","index","key","_hoisted_4","_toDisplayString","_hoisted_5","fragen","frage","onClick","$event","createFrageInFirebase","$router","push","_hoisted_6"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/ErstelleUmfrageAusTemplate.vue"],"sourcesContent":["<template>\n  <div class=\"view-main-content\">\n    <h1 class=\"view-main-content-heading\">Übersicht aller Templates</h1>\n\n    <div id=\"template-container\">\n\n      <div v-for=\"(template, index) in templates\" :key=\"index\" id=\"template\" class=\"textbox\">\n          <h2 class=\"view-main-content-heading\">{{ template }} </h2> \n          <p>Dieses Template enthält folgende Fragen: </p>\n        <div v-for=\"(frage) in fragen[index]\" >\n          <p>\n              {{ frage}}\n          </p>\n        </div>\n        <button @click=\"createFrageInFirebase(template), this.$router.push('/umfrageWurdeErstellt')\" class=\"view-main-content-advanceBtn\">\n            Template auswählen\n        </button>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.view-main-content {\n  padding-left: 0;\n  margin: 0 10%;\n  width: 80%;\n}\n#template-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n#template-container #template {\n  width: 45%;\n  margin-bottom: 5rem;\n  display: flex;\n  flex-direction: column;\n  min-height: 50vh;\n}\n\n#template > * {\n  margin-left: 2.5rem;\n}\n\n#template h2 {\n  padding-top: 2rem;\n}\n\n\n#template-container #template > p {\n  margin-bottom: 1.5rem;\n}\n\n#template-container #template > div p {\n  margin-bottom: .5rem;\n}\n\n#template-container #template button {\n  margin-top: 1.5em;\n  width: 30%;\n  align-self: ends;\n}\n\n</style>\n  \n<script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, addDoc, updateDoc, FieldValue, arrayUnion, getFirestore, getDocs} from 'firebase/firestore';\n    import { db } from '@/firebase'\n \n    const templateCollectionRef = collection(db,'Templates')\n\n    const templates = ref([])\n    const fragen = ref([])\n    const hilfeTemplates = ref([])\n\n    onMounted(() => {\n    onSnapshot(templateCollectionRef, (querySnapshot) => {\n      const helperTemplates = []\n      querySnapshot.forEach((doc) => {\n        helperTemplates.push(doc.id)\n      })\n      templates.value = helperTemplates\n\n      templates.value.forEach((template, index) => {\n        const fragenInTemplateRef = collection(db, 'Templates', template, 'Fragen')\n        onSnapshot(fragenInTemplateRef, (querySnapshot) => {\n          const questions = []\n          const helper = []\n          querySnapshot.forEach((doc) => {\n            questions.push(doc.data().question)\n            console.log(doc.data().question)\n          })\n          hilfeTemplates.value[index] = helper\n          fragen.value[index] = questions\n          console.log(fragen.value)\n        })\n      }) \n    })\n  })\n\n\n    const createFrageInFirebase = async (template) => {\n        sessionStorage.setItem('ausgewähltesTemplate', template);\n        const ausgewähltesTemplate = sessionStorage.getItem('ausgewähltesTemplate')\n        const umfragenName = sessionStorage.getItem('umfragenName')\n        const EMailAdmin = sessionStorage.getItem('EMailAdmin')\n\n        const zielRef = collection(db,'AlleUmfragen', EMailAdmin, 'Umfragen', umfragenName, 'Fragen')\n        const quellenRef = collection(db, 'Templates', ausgewähltesTemplate, 'Fragen')\n\n        const querySnapshot = await getDocs(quellenRef)\n        querySnapshot.forEach((doc) => {\n        // create new document in destination collection with same data\n         addDoc(zielRef, doc.data());\n        });\n    }\n</script>"],"mappings":";;;;EACOA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAAoE;EAAhED,KAAK,EAAC;AAA2B,GAAC,2BAAyB;;EAE1DE,EAAE,EAAC;AAAoB;;EAGlBF,KAAK,EAAC;AAA2B;gEACrCC,mBAAA,CAAgD,WAA7C,2CAAyC;;;uBAPpDE,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,UAAoE,EAEpEJ,mBAAA,CAeM,OAfNK,UAeM,I,kBAbJH,mBAAA,CAYMI,SAAA,QAAAC,WAAA,CAZ2BC,MAAA,CAAAC,SAAS,GAA7BC,QAAQ,EAAEC,KAAK;yBAA5BT,mBAAA,CAYM;MAZuCU,GAAG,EAAED,KAAK;MAAEV,EAAE,EAAC,UAAU;MAACF,KAAK,EAAC;QACzEC,mBAAA,CAA0D,MAA1Da,UAA0D,EAAAC,gBAAA,CAAjBJ,QAAQ,kBACjDK,UAAgD,G,kBAClDb,mBAAA,CAIMI,SAAA,QAAAC,WAAA,CAJiBC,MAAA,CAAAQ,MAAM,CAACL,KAAK,GAAtBM,KAAK;2BAAlBf,mBAAA,CAIM,cAHJF,mBAAA,CAEI,WAAAc,gBAAA,CADGG,KAAK,iB;sCAGdjB,mBAAA,CAES;MAFAkB,OAAK,EAAAC,MAAA,KAAEX,MAAA,CAAAY,qBAAqB,CAACV,QAAQ,QAAQW,OAAO,CAACC,IAAI;MAA2BvB,KAAK,EAAC;OAA+B,sBAElI,iBAAAwB,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}