{"ast":null,"code":"import { ref, computed, onMounted, resolveDirective } from 'vue';\nimport { doc, addDoc, collection, setDoc } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  __name: 'UmfragenErstellen',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const umfrageName = ref('');\n    const umfragenCollectionRef = collection(db, 'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen');\n    const addUmfrage = async () => {\n      // create a new document with ID \"Test3\" in the \"Umfragen\" collection\n      const umfrageDocRef = doc(umfragenCollectionRef, umfrageName.value);\n      await setDoc(umfrageDocRef, {});\n      sessionStorage.setItem('umfragenName', umfrageName.value);\n      console.log(sessionStorage.getItem('umfragenName'));\n      /*\n      const fragenCollectionRef = collection(umfrageDocRef, 'Fragen')\n      await addDoc(fragenCollectionRef, {})\n      */\n    };\n\n    const __returned__ = {\n      umfrageName,\n      umfragenCollectionRef,\n      addUmfrage,\n      ref,\n      computed,\n      onMounted,\n      resolveDirective,\n      get doc() {\n        return doc;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get collection() {\n        return collection;\n      },\n      get setDoc() {\n        return setDoc;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","resolveDirective","doc","addDoc","collection","setDoc","db","umfrageName","umfragenCollectionRef","sessionStorage","getItem","addUmfrage","umfrageDocRef","value","setItem","console","log"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenErstellen.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Umfrage erstellen</h1>\n      <form>\n        <div>\n          <label for=\"umfrage-name\">Name der Umfrage:</label>\n          <input type=\"text\" id=\"umfrage-name\" v-model=\"umfrageName\" required>\n        </div>\n        <br>\n        <button @click=\"this.$router.push('/fragenErstellen'), addUmfrage()\">Fragen erstellen</button>\n        <button @click=\"this.$router.push('/erstelleUmfrageAusTemplate'), addUmfrage()\">Erstelle aus einem Template</button>\n      </form>\n    </div>\n  </template>\n  \n  <script setup>\n\n  import { ref, computed, onMounted, resolveDirective } from 'vue'\n  import { doc, addDoc, collection, setDoc} from 'firebase/firestore';\n  import { db } from '@/firebase'\n  const umfrageName = ref('')\n  const umfragenCollectionRef = collection(db, 'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen')\n\n\n  const addUmfrage = async () => {\n        // create a new document with ID \"Test3\" in the \"Umfragen\" collection\n        const umfrageDocRef = doc(umfragenCollectionRef, umfrageName.value)\n        await setDoc(umfrageDocRef, {})\n        sessionStorage.setItem('umfragenName', umfrageName.value)\n        console.log(sessionStorage.getItem('umfragenName'))\n        /*\n        const fragenCollectionRef = collection(umfrageDocRef, 'Fragen')\n        await addDoc(fragenCollectionRef, {})\n        */\n    }\n\n  </script>\n  "],"mappings":"AAiBE,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,KAAK;AAChE,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,QAAO,oBAAoB;AACnE,SAASC,EAAE,QAAQ,YAAY;;;;;;;IAC/B,MAAMC,WAAW,GAAGT,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMU,qBAAqB,GAAGJ,UAAU,CAACE,EAAE,EAAE,cAAc,EAAEG,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC;IAG9G,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MACzB;MACA,MAAMC,aAAa,GAAGV,GAAG,CAACM,qBAAqB,EAAED,WAAW,CAACM,KAAK,CAAC;MACnE,MAAMR,MAAM,CAACO,aAAa,EAAE,CAAC,CAAC,CAAC;MAC/BH,cAAc,CAACK,OAAO,CAAC,cAAc,EAAEP,WAAW,CAACM,KAAK,CAAC;MACzDE,OAAO,CAACC,GAAG,CAACP,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;MACnD;AACR;AACA;AACA;IACI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}