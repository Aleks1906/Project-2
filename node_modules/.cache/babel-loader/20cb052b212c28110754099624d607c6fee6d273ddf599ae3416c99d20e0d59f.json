{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, resolveDirective } from 'vue';\nimport { collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore, QuerySnapshot } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  __name: 'UmfragenÜbersicht',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const nameUserLaden = () => {\n      username = sessionStorage.getItem('EMailAdmin');\n      return username;\n    };\n    let username = '';\n    const umfragenNamen = ref([]);\n    const EMailAdmin = sessionStorage.getItem('EMailAdmin');\n    const umfragenCollectionRef = collection(db, 'AlleUmfragen', EMailAdmin, 'Umfragen');\n    //const umfragenCollectionRef2 = collection('AlleUmfragen').doc(sessionStorage.getItem('EMailAdmin'))\n\n    onMounted(() => {\n      onSnapshot(umfragenCollectionRef, querySnapshot => {\n        const namen = [];\n        querySnapshot.forEach(doc => {\n          namen.push(doc.id);\n        });\n        umfragenNamen.value = namen;\n        //console.log(\"onMounted aufgerufen?\" + namen[0])\n        //umfragenNamen.value[index] = namen\n        //console.log(\"Wert von Umfragen Value: \" + umfragenNamen.value)\n\n        let ausgabe = '';\n        if (namen.length != undefined) {\n          console.log(\"namenAnzeigen aufgerufen\" + namen.value);\n          for (let x = 0; x < namen.length; x++) {\n            console.log(\"Komme ich hierhin?!!\");\n            //ausgabe = ausgabe + '<br>' + '<a href= \"/umfragenDetailÜbersicht\">' + namen[x] + '</a>' + '<br> <br> <br>'\n            //ausgabe = ausgabe + '<br>' + '<router-link to=\"/umfragenDetailÜbersicht\" custom v-slot=\"{navigate}\">' + '<button @click=\"navigate()\" role = \"link\">' + namen[x] + '</button> </router-link>' + '<br> <br> <br>'\n            //ausgabe = ausgabe + '<br>' + '<router-link to=\"/umfragenDetailÜbersicht\" v-slot=\"{ navigate }\">' + \n            //'<button @click=\"navigate\" role=\"link\">' + namen[x] + '</button> </router-link>'\n            //ausgabe = ausgabe + '<br>' + '<RouterLink to=\"/umfragenDetailÜbersicht\" id=\"change-to-register\">' + namen[x] + '</RouterLink>'\n            ausgabe = ausgabe + '<br>' + '<button @click=\"this.$router.push(\\'/umfragenDetailÜbersicht\\')\">' + namen[x] + '</button>' + '<br>';\n          }\n        } else {\n          ausgabe = \"Noch keine Umfragen vorhanden\";\n        }\n        //document.getElementById('übersicht').innerHTML = ausgabe\n        console.log(\"Ausgabe: \" + ausgabe);\n      });\n      //return ausgabe\n    });\n\n    const writeToSessionStorage = (umfrage, admin) => {\n      sessionStorage.setItem('umfrageAuswerten', umfrage);\n    };\n    const __returned__ = {\n      nameUserLaden,\n      get username() {\n        return username;\n      },\n      set username(v) {\n        username = v;\n      },\n      umfragenNamen,\n      EMailAdmin,\n      umfragenCollectionRef,\n      writeToSessionStorage,\n      ref,\n      computed,\n      onMounted,\n      resolveDirective,\n      get collection() {\n        return collection;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get doc() {\n        return doc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get FieldValue() {\n        return FieldValue;\n      },\n      get arrayUnion() {\n        return arrayUnion;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get QuerySnapshot() {\n        return QuerySnapshot;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","resolveDirective","collection","onSnapshot","doc","updateDoc","FieldValue","arrayUnion","getFirestore","QuerySnapshot","db","nameUserLaden","username","sessionStorage","getItem","umfragenNamen","EMailAdmin","umfragenCollectionRef","querySnapshot","namen","forEach","push","id","value","ausgabe","length","undefined","console","log","x","writeToSessionStorage","umfrage","admin","setItem"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenÜbersicht.vue"],"sourcesContent":["<template>\n    <div class=\"view-main-content\">\n        <h1 class=\"view-main-content-heading\">\n            Derzeit laufende Umfragen, welche von {{ nameUserLaden() }} erstellt wurden: \n        </h1>\n\n        <div v-for=\"umfrage in umfragenNamen\">\n                <button @click=\"writeToSessionStorage(umfrage), this.$router.push('/umfragenDetailÜbersicht')\" class=\"view-main-content-advanceBtn\"> \n                    {{ umfrage }}\n                </button>\n        </div>\n    </div>  \n</template>\n\n<style scoped>\n\n</style>\n\n<script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore, QuerySnapshot} from 'firebase/firestore';\n    import { db } from '@/firebase'\n    const nameUserLaden = () => {\n        username = sessionStorage.getItem('EMailAdmin')\n        return username\n    }\n\n    let username = ''\n    const umfragenNamen = ref([])\n    const EMailAdmin = sessionStorage.getItem('EMailAdmin')\n    const umfragenCollectionRef = collection(db,'AlleUmfragen', EMailAdmin, 'Umfragen')\n    //const umfragenCollectionRef2 = collection('AlleUmfragen').doc(sessionStorage.getItem('EMailAdmin'))\n\n    onMounted(() => {\n         onSnapshot(umfragenCollectionRef, (querySnapshot) => {\n            const namen = []\n            querySnapshot.forEach((doc) => {\n                namen.push(doc.id)\n            })\n            umfragenNamen.value = namen\n            //console.log(\"onMounted aufgerufen?\" + namen[0])\n            //umfragenNamen.value[index] = namen\n            //console.log(\"Wert von Umfragen Value: \" + umfragenNamen.value)\n            \n            let ausgabe = ''\n            if(namen.length != undefined){\n                console.log(\"namenAnzeigen aufgerufen\" + namen.value)\n                for (let x = 0; x < namen.length; x++) {\n                    console.log(\"Komme ich hierhin?!!\")\n                    //ausgabe = ausgabe + '<br>' + '<a href= \"/umfragenDetailÜbersicht\">' + namen[x] + '</a>' + '<br> <br> <br>'\n                    //ausgabe = ausgabe + '<br>' + '<router-link to=\"/umfragenDetailÜbersicht\" custom v-slot=\"{navigate}\">' + '<button @click=\"navigate()\" role = \"link\">' + namen[x] + '</button> </router-link>' + '<br> <br> <br>'\n                    //ausgabe = ausgabe + '<br>' + '<router-link to=\"/umfragenDetailÜbersicht\" v-slot=\"{ navigate }\">' + \n                    //'<button @click=\"navigate\" role=\"link\">' + namen[x] + '</button> </router-link>'\n                    //ausgabe = ausgabe + '<br>' + '<RouterLink to=\"/umfragenDetailÜbersicht\" id=\"change-to-register\">' + namen[x] + '</RouterLink>'\n                    ausgabe = ausgabe + '<br>' + '<button @click=\"this.$router.push(\\'/umfragenDetailÜbersicht\\')\">' + namen[x] + '</button>' + '<br>'\n                }\n            } else {\n                ausgabe = \"Noch keine Umfragen vorhanden\"\n            }\n            //document.getElementById('übersicht').innerHTML = ausgabe\n            console.log(\"Ausgabe: \" +  ausgabe)\n        })\n        //return ausgabe\n    })\n\n    const writeToSessionStorage = (umfrage, admin) => {\n        sessionStorage.setItem('umfrageAuswerten', umfrage);\n    }\n</script>"],"mappings":";AAmBI,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,KAAK;AAChE,SAAQC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,EAAEC,aAAa,QAAO,oBAAoB;AAC9H,SAASC,EAAE,QAAQ,YAAY;;;;;;;IAC/B,MAAMC,aAAa,GAAGA,CAAA,KAAM;MACxBC,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;MAC/C,OAAOF,QAAQ;IACnB,CAAC;IAED,IAAIA,QAAQ,GAAG,EAAE;IACjB,MAAMG,aAAa,GAAGjB,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMkB,UAAU,GAAGH,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IACvD,MAAMG,qBAAqB,GAAGf,UAAU,CAACQ,EAAE,EAAC,cAAc,EAAEM,UAAU,EAAE,UAAU,CAAC;IACnF;;IAEAhB,SAAS,CAAC,MAAM;MACXG,UAAU,CAACc,qBAAqB,EAAGC,aAAa,IAAK;QAClD,MAAMC,KAAK,GAAG,EAAE;QAChBD,aAAa,CAACE,OAAO,CAAEhB,GAAG,IAAK;UAC3Be,KAAK,CAACE,IAAI,CAACjB,GAAG,CAACkB,EAAE,CAAC;QACtB,CAAC,CAAC;QACFP,aAAa,CAACQ,KAAK,GAAGJ,KAAK;QAC3B;QACA;QACA;;QAEA,IAAIK,OAAO,GAAG,EAAE;QAChB,IAAGL,KAAK,CAACM,MAAM,IAAIC,SAAS,EAAC;UACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAGT,KAAK,CAACI,KAAK,CAAC;UACrD,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACM,MAAM,EAAEI,CAAC,EAAE,EAAE;YACnCF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;YACnC;YACA;YACA;YACA;YACA;YACAJ,OAAO,GAAGA,OAAO,GAAG,MAAM,GAAG,mEAAmE,GAAGL,KAAK,CAACU,CAAC,CAAC,GAAG,WAAW,GAAG,MAAM;UACtI;QACJ,CAAC,MAAM;UACHL,OAAO,GAAG,+BAA+B;QAC7C;QACA;QACAG,OAAO,CAACC,GAAG,CAAC,WAAW,GAAIJ,OAAO,CAAC;MACvC,CAAC,CAAC;MACF;IACJ,CAAC,CAAC;;IAEF,MAAMM,qBAAqB,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;MAC9CnB,cAAc,CAACoB,OAAO,CAAC,kBAAkB,EAAEF,OAAO,CAAC;IACvD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}