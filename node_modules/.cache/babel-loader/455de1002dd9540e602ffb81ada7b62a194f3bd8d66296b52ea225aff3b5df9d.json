{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7d6cf198\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"view-main-content\"\n};\nconst _hoisted_2 = {\n  id: \"option-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"auswertung\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"view-main-content-advanceBtn\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.umfrageAuswerten())\n  }, _toDisplayString($setup.getName()) + \" \" + _toDisplayString(' auswerten'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => ($setup.umfrageLöschen(), this.$router.push('/'))),\n    class: \"view-main-content-advanceBtn\",\n    id: \"delete-btn\"\n  }, _toDisplayString($setup.getName()) + \" löschen \", 1 /* TEXT */)]), _hoisted_3]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","$event","$setup","umfrageAuswerten","getName","_toDisplayString","umfrageLöschen","$router","push","_hoisted_3"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenDetailÜbersicht.vue"],"sourcesContent":["<template>\n  <div class=\"view-main-content\">\n    <div id=\"option-container\">\n    <button class=\"view-main-content-advanceBtn\"\n    @click=\"umfrageAuswerten()\"\n        > \n        {{getName()}}\n        {{ \n        ' auswerten'\n        }}\n    </button>\n\n    <button @click=\"umfrageLöschen(), this.$router.push('/')\" class=\"view-main-content-advanceBtn\" id=\"delete-btn\">\n        {{getName()}} löschen\n    </button>\n  </div>\n\n    <div id=\"auswertung\">\n    </div>\n  </div>\n</template>\n  \n<style scoped>\n.view-main-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: space-around;\n}\n\n.view-main-content #option-container {\n  display: flex;\n  flex-direction: row;\n  width: 30%;\n  justify-content: space-around;\n}\n\n.view-main-content #delete-btn:hover {\n  border-color: red;\n  color: red;\n}\n\n.view-main-content #auswertung {\n  align-self: flex-start;\n  padding-left: 4rem;\n}\n\n\n</style>\n  \n<script setup>\n  import { ref, computed, onMounted, resolveDirective } from 'vue'\n  import {collection, onSnapshot, doc, deleteDoc, getDocs, updateDoc, FieldValue, arrayUnion, getFirestore} from 'firebase/firestore';\n\n  import { db } from '@/firebase'\n  const questions = ref([{}])\n  const umfragenCollectionRef = collection(db,'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen', sessionStorage.getItem('umfrageAuswerten'), 'Fragen')\n  const deleteRef = doc(db,'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen', sessionStorage.getItem('umfrageAuswerten'))\n  //Wie greife ich auf EMailAdmin zu als normaler User?\n  //Wie greife ich auf Umfrage zur Kundenzufriedenheit zu?\n  const quizCompleted = ref(false)\n  const currentQuestion = ref(0)\n  \n  onMounted(() => {\n    onSnapshot(umfragenCollectionRef, (querySnapshot) => {\n    const fbQuestions = []\n    querySnapshot.forEach((doc) => {\n        const frage = {\n          id: doc.id,\n          options: doc.data().options,\n          question: doc.data().question,\n          selected: doc.data().selected,\n          selectedLocal: null\n        }\n        frage.selected.push(null)\n        fbQuestions.push(frage)\n      })\n    questions.value = fbQuestions\n    })\n  })\n  const getCurrentQuestion = computed(() => {\n    let question = questions.value[currentQuestion.value]\n    question.index = currentQuestion.value\n    return question\n  })\n\n  const NextQuestion = () => {\n    if (currentQuestion.value < questions.value.length - 1) {\n      currentQuestion.value++\n      return\n    }\n    \n    quizCompleted.value = true\n  }\n\n  const countAnswers = () => {\n    let len = getCurrentQuestion.value.options.length\n    let len2 = getCurrentQuestion.value.selected.length\n    let arr = new Array(len)\n    for(let x = 0; x < len; x++){\n      let count = 0\n      for (let i = 0; i < len2; i++) {\n        if(getCurrentQuestion.value.selected[i] === x.toString()){\n          count++\n        } \n      }\n      arr[x] = count\n    }\n    return arr\n  }\n\n  const umfrageAuswerten = () => {\n    currentQuestion.value = 0\n    let anzahlFragen = questions.value.length\n    let ergebnis = []\n    let ausgabe = \"\"\n    for(let x = 0; x < anzahlFragen; x++){\n\n      let antworten = countAnswers()\n      ergebnis.push([...antworten])\n      ausgabe = ausgabe + \"<br> <br> Frage \" + (x+1) + \": \"+  getCurrentQuestion.value.question + \"<br><br><br>Auswahlmöglichkeiten: \"\n      for(let z = 0; z < getCurrentQuestion.value.options.length; z++){\n        ausgabe = ausgabe + \"<br>\" +  getCurrentQuestion.value.options[z] + \", Anzahl ausgewählt: \" + ergebnis[x][z] + \n        \"<br>\"\n      }\n      document.getElementById('auswertung').innerHTML = ausgabe\n      \"<br\"\n      NextQuestion()\n    }\n    currentQuestion.value = 0\n    console.log(\"Ergebnis: \", ergebnis)\n    return ausgabe\n  }\n\n  const getName = () => {\n      return sessionStorage.getItem('umfrageAuswerten')\n  }\n  const umfrageLöschen = async () => {\n      const questionSnapshot = await getDocs(umfragenCollectionRef);\n      questionSnapshot.forEach(async (doc) => {\n          await deleteDoc(doc.ref);\n      });\n      const querySnapshot = await deleteDoc(deleteRef);\n  }\n</script>"],"mappings":";;;;EACOA,KAAK,EAAC;AAAmB;;EACvBC,EAAE,EAAC;AAAkB;gEAe1BC,mBAAA,CACM;EADDD,EAAE,EAAC;AAAY;;;uBAhBtBE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJF,mBAAA,CAaI,OAbJG,UAaI,GAZJH,mBAAA,CAOS;IAPDF,KAAK,EAAC,8BAA8B;IAC3CM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,gBAAgB;sBAElBD,MAAA,CAAAE,OAAO,MAAI,GACb,GAAAC,gBAAA,CACA,YAAY,kBAIhBV,mBAAA,CAES;IAFAI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,KAAEC,MAAA,CAAAI,cAAc,SAASC,OAAO,CAACC,IAAI;IAAOf,KAAK,EAAC,8BAA8B;IAACC,EAAE,EAAC;sBAC5FQ,MAAA,CAAAE,OAAO,MAAI,WACjB,gB,GAGAK,UACM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}