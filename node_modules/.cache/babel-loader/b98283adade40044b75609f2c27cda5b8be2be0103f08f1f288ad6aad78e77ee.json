{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, \" Derzeit laufende Umfragen, welche von \" + _toDisplayString($setup.nameUserLaden()) + \" erstellt wurden: \", 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.umfragenNamen, umfrage => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => ($setup.writeToSessionStorage(umfrage), this.$router.push('/umfragenDetailÜbersicht'))\n    }, _toDisplayString(umfrage), 9 /* TEXT, PROPS */, _hoisted_1)]);\n  }), 256 /* UNKEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","$setup","nameUserLaden","_createElementBlock","_Fragment","_renderList","umfragenNamen","umfrage","onClick","$event","writeToSessionStorage","$router","push","_hoisted_1"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenÜbersicht.vue"],"sourcesContent":["<template>\n    <div>\n        Derzeit laufende Umfragen, welche von {{ nameUserLaden() }} erstellt wurden: \n    </div>\n\n    <div v-for=\"umfrage in umfragenNamen\">\n            <button @click=\"writeToSessionStorage(umfrage), this.$router.push('/umfragenDetailÜbersicht')\"> \n                {{ umfrage }}\n             </button>\n    </div>\n</template>\n\n<script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore, QuerySnapshot} from 'firebase/firestore';\n    import { db } from '@/firebase'\n    const nameUserLaden = () => {\n        username = sessionStorage.getItem('EMailAdmin')\n        return username\n    }\n\n    let username = ''\n    const umfragenNamen = ref([])\n    const EMailAdmin = sessionStorage.getItem('EMailAdmin')\n    const umfragenCollectionRef = collection(db,'AlleUmfragen', EMailAdmin, 'Umfragen')\n    //const umfragenCollectionRef2 = collection('AlleUmfragen').doc(sessionStorage.getItem('EMailAdmin'))\n\n    onMounted(() => {\n         onSnapshot(umfragenCollectionRef, (querySnapshot) => {\n            const namen = []\n            querySnapshot.forEach((doc) => {\n                namen.push(doc.id)\n            })\n            umfragenNamen.value = namen\n            //console.log(\"onMounted aufgerufen?\" + namen[0])\n            //umfragenNamen.value[index] = namen\n            //console.log(\"Wert von Umfragen Value: \" + umfragenNamen.value)\n            \n            let ausgabe = ''\n            if(namen.length != undefined){\n                console.log(\"namenAnzeigen aufgerufen\" + namen.value)\n                for (let x = 0; x < namen.length; x++) {\n                    console.log(\"Komme ich hierhin?!!\")\n                    //ausgabe = ausgabe + '<br>' + '<a href= \"/umfragenDetailÜbersicht\">' + namen[x] + '</a>' + '<br> <br> <br>'\n                    //ausgabe = ausgabe + '<br>' + '<router-link to=\"/umfragenDetailÜbersicht\" custom v-slot=\"{navigate}\">' + '<button @click=\"navigate()\" role = \"link\">' + namen[x] + '</button> </router-link>' + '<br> <br> <br>'\n                    //ausgabe = ausgabe + '<br>' + '<router-link to=\"/umfragenDetailÜbersicht\" v-slot=\"{ navigate }\">' + \n                    //'<button @click=\"navigate\" role=\"link\">' + namen[x] + '</button> </router-link>'\n                    //ausgabe = ausgabe + '<br>' + '<RouterLink to=\"/umfragenDetailÜbersicht\" id=\"change-to-register\">' + namen[x] + '</RouterLink>'\n                    ausgabe = ausgabe + '<br>' + '<button @click=\"this.$router.push(\\'/umfragenDetailÜbersicht\\')\">' + namen[x] + '</button>' + '<br>'\n                }\n            } else {\n                ausgabe = \"Noch keine Umfragen vorhanden\"\n            }\n            //document.getElementById('übersicht').innerHTML = ausgabe\n            console.log(\"Ausgabe: \" +  ausgabe)\n        })\n        //return ausgabe\n    })\n\n    const writeToSessionStorage = (umfrage, admin) => {\n        sessionStorage.setItem('umfrageAuswerten', umfrage);\n    }\n</script>"],"mappings":";;;;6DACIA,mBAAA,CAEM,aAFD,yCACqC,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,aAAa,MAAK,oBAC/D,kB,kBAEAC,mBAAA,CAIMC,SAAA,QAAAC,WAAA,CAJiBJ,MAAA,CAAAK,aAAa,EAAxBC,OAAO;yBAAnBJ,mBAAA,CAIM,cAHEJ,mBAAA,CAEU;MAFDS,OAAK,EAAAC,MAAA,KAAER,MAAA,CAAAS,qBAAqB,CAACH,OAAO,QAAQI,OAAO,CAACC,IAAI;wBAC1DL,OAAO,wBAAAM,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}