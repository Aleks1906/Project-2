{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, resolveDirective } from 'vue';\nimport { collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  __name: 'UmfragenÜbersichtUser',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const umfragenCollectionRef = collection(db, 'AlleUmfragen');\n    const umfrageNamen = ref([]);\n    onMounted(() => {\n      umfragenCollectionRef.get().then(querySnapshot => {\n        const namen = [];\n        querySnapshot.forEach(doc => {\n          const umfrageName = doc.data().name;\n          namen.push(umfrageName);\n        });\n        umfrageNamen.value = namen;\n      });\n    });\n    const __returned__ = {\n      umfragenCollectionRef,\n      umfrageNamen,\n      ref,\n      computed,\n      onMounted,\n      resolveDirective,\n      get collection() {\n        return collection;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get doc() {\n        return doc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get FieldValue() {\n        return FieldValue;\n      },\n      get arrayUnion() {\n        return arrayUnion;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","resolveDirective","collection","onSnapshot","doc","updateDoc","FieldValue","arrayUnion","getFirestore","db","umfragenCollectionRef","umfrageNamen","get","then","querySnapshot","namen","forEach","umfrageName","data","name","push","value"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenÜbersichtUser.vue"],"sourcesContent":["<template>\n    <h1>Übersicht aller Umfragen</h1>\n\n</template>\n\n<script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore} from 'firebase/firestore';\n  \n    import { db } from '@/firebase'\n \n    const umfragenCollectionRef = collection(db,'AlleUmfragen')\n\n    const umfrageNamen = ref([])\n\n    onMounted(() => {\n    umfragenCollectionRef.get().then((querySnapshot) => {\n        const namen = []\n        querySnapshot.forEach((doc) => {\n        const umfrageName = doc.data().name\n        namen.push(umfrageName)\n        })\n        umfrageNamen.value = namen\n    })\n    })\n</script>"],"mappings":";AAMI,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,KAAK;AAChE,SAAQC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAO,oBAAoB;AAE/G,SAASC,EAAE,QAAQ,YAAY;;;;;;;IAE/B,MAAMC,qBAAqB,GAAGR,UAAU,CAACO,EAAE,EAAC,cAAc,CAAC;IAE3D,MAAME,YAAY,GAAGb,GAAG,CAAC,EAAE,CAAC;IAE5BE,SAAS,CAAC,MAAM;MAChBU,qBAAqB,CAACE,GAAG,EAAE,CAACC,IAAI,CAAEC,aAAa,IAAK;QAChD,MAAMC,KAAK,GAAG,EAAE;QAChBD,aAAa,CAACE,OAAO,CAAEZ,GAAG,IAAK;UAC/B,MAAMa,WAAW,GAAGb,GAAG,CAACc,IAAI,EAAE,CAACC,IAAI;UACnCJ,KAAK,CAACK,IAAI,CAACH,WAAW,CAAC;QACvB,CAAC,CAAC;QACFN,YAAY,CAACU,KAAK,GAAGN,KAAK;MAC9B,CAAC,CAAC;IACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}