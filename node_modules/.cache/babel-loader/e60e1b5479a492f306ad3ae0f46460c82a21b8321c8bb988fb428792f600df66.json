{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, resolveDirective } from 'vue';\nimport { collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  __name: 'UmfragenDetailÜbersicht',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const questions = ref([{}]);\n    const umfragenCollectionRef = collection(db, 'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen', sessionStorage.getItem('umfrageAuswerten'), 'Fragen');\n    //Wie greife ich auf EMailAdmin zu als normaler User?\n    //Wie greife ich auf Umfrage zur Kundenzufriedenheit zu?\n    const quizCompleted = ref(false);\n    const currentQuestion = ref(0);\n    onMounted(() => {\n      onSnapshot(umfragenCollectionRef, querySnapshot => {\n        const fbQuestions = [];\n        querySnapshot.forEach(doc => {\n          const frage = {\n            id: doc.id,\n            options: doc.data().options,\n            question: doc.data().question,\n            selected: doc.data().selected,\n            selectedLocal: null\n          };\n          frage.selected.push(null);\n          fbQuestions.push(frage);\n        });\n        questions.value = fbQuestions;\n      });\n    });\n    const getCurrentQuestion = computed(() => {\n      let question = questions.value[currentQuestion.value];\n      question.index = currentQuestion.value;\n      return question;\n    });\n    const NextQuestion = () => {\n      if (currentQuestion.value < questions.value.length - 1) {\n        currentQuestion.value++;\n        return;\n      }\n      quizCompleted.value = true;\n    };\n    const countAnswers = () => {\n      let len = getCurrentQuestion.value.options.length;\n      let len2 = getCurrentQuestion.value.selected.length;\n      let arr = new Array(len);\n      for (let x = 0; x < len; x++) {\n        let count = 0;\n        for (let i = 0; i < len2; i++) {\n          if (getCurrentQuestion.value.selected[i] === x.toString()) {\n            count++;\n          }\n        }\n        arr[x] = count;\n      }\n      return arr;\n    };\n    const umfrageAuswerten = () => {\n      currentQuestion.value = 0;\n      let anzahlFragen = questions.value.length;\n      let ergebnis = [];\n      let ausgabe = \"\";\n      for (let x = 0; x < anzahlFragen; x++) {\n        let antworten = countAnswers();\n        ergebnis.push([...antworten]);\n        ausgabe = ausgabe + \" <br> <br> Frage \" + (x + 1) + \": \" + getCurrentQuestion.value.question + \"<br>Auswahlmöglichkeiten: \";\n        for (let z = 0; z < getCurrentQuestion.value.options.length; z++) {\n          ausgabe = ausgabe + \"<br>\" + getCurrentQuestion.value.options[z] + \", Anzahl ausgewählt: \" + ergebnis[x][z];\n        }\n        document.getElementById('auswertung').innerHTML = ausgabe;\n        NextQuestion();\n      }\n      currentQuestion.value = 0;\n      console.log(\"Ergebnis: \", ergebnis);\n      return ausgabe;\n    };\n    const __returned__ = {\n      questions,\n      umfragenCollectionRef,\n      quizCompleted,\n      currentQuestion,\n      getCurrentQuestion,\n      NextQuestion,\n      countAnswers,\n      umfrageAuswerten,\n      ref,\n      computed,\n      onMounted,\n      resolveDirective,\n      get collection() {\n        return collection;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get doc() {\n        return doc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get FieldValue() {\n        return FieldValue;\n      },\n      get arrayUnion() {\n        return arrayUnion;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","resolveDirective","collection","onSnapshot","doc","updateDoc","FieldValue","arrayUnion","getFirestore","db","questions","umfragenCollectionRef","sessionStorage","getItem","quizCompleted","currentQuestion","querySnapshot","fbQuestions","forEach","frage","id","options","data","question","selected","selectedLocal","push","value","getCurrentQuestion","index","NextQuestion","length","countAnswers","len","len2","arr","Array","x","count","i","toString","umfrageAuswerten","anzahlFragen","ergebnis","ausgabe","antworten","z","document","getElementById","innerHTML","console","log"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenDetailÜbersicht.vue"],"sourcesContent":["<template>\n    <button\n    @click=\"umfrageAuswerten()\"\n        > \n        {{ \n        'Umfrage auswerten'\n        }}\n    </button>\n\n    <div id = \"auswertung\">\n    </div>\n</template>\n  \n  <style>\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      font-family: 'Monsterrat', sans-serif;\n    }\n    body {\n      background-color: #3d1771;\n      color: #FFF;\n    }\n  </style>\n  \n  <script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore} from 'firebase/firestore';\n  \n    import { db } from '@/firebase'\n    const questions = ref([{}])\n    const umfragenCollectionRef = collection(db,'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen', sessionStorage.getItem('umfrageAuswerten'), 'Fragen')\n    //Wie greife ich auf EMailAdmin zu als normaler User?\n    //Wie greife ich auf Umfrage zur Kundenzufriedenheit zu?\n    const quizCompleted = ref(false)\n    const currentQuestion = ref(0)\n    \n    onMounted(() => {\n      onSnapshot(umfragenCollectionRef, (querySnapshot) => {\n      const fbQuestions = []\n      querySnapshot.forEach((doc) => {\n          const frage = {\n            id: doc.id,\n            options: doc.data().options,\n            question: doc.data().question,\n            selected: doc.data().selected,\n            selectedLocal: null\n          }\n          frage.selected.push(null)\n          fbQuestions.push(frage)\n        })\n      questions.value = fbQuestions\n      })\n    })\n    const getCurrentQuestion = computed(() => {\n      let question = questions.value[currentQuestion.value]\n      question.index = currentQuestion.value\n      return question\n    })\n\n    const NextQuestion = () => {\n      if (currentQuestion.value < questions.value.length - 1) {\n        currentQuestion.value++\n        return\n      }\n      \n      quizCompleted.value = true\n    }\n\n    const countAnswers = () => {\n      let len = getCurrentQuestion.value.options.length\n      let len2 = getCurrentQuestion.value.selected.length\n      let arr = new Array(len)\n      for(let x = 0; x < len; x++){\n        let count = 0\n        for (let i = 0; i < len2; i++) {\n          if(getCurrentQuestion.value.selected[i] === x.toString()){\n            count++\n          } \n        }\n        arr[x] = count\n      }\n      return arr\n    }\n  \n    const umfrageAuswerten = () => {\n      currentQuestion.value = 0\n      let anzahlFragen = questions.value.length\n      let ergebnis = []\n      let ausgabe = \"\"\n      for(let x = 0; x < anzahlFragen; x++){\n        let antworten = countAnswers()\n        ergebnis.push([...antworten])\n        ausgabe = ausgabe + \" <br> <br> Frage \" + (x+1) + \": \"+  getCurrentQuestion.value.question + \"<br>Auswahlmöglichkeiten: \"\n        for(let z = 0; z < getCurrentQuestion.value.options.length; z++){\n          ausgabe = ausgabe + \"<br>\" +  getCurrentQuestion.value.options[z] + \", Anzahl ausgewählt: \" + ergebnis[x][z]\n        }\n        document.getElementById('auswertung').innerHTML = ausgabe\n        NextQuestion()\n      }\n      currentQuestion.value = 0\n      console.log(\"Ergebnis: \", ergebnis)\n      return ausgabe\n    }\n  </script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}