{"ast":null,"code":"import { ref, computed, onMounted, resolveDirective } from 'vue';\nimport { doc, addDoc, collection, setDoc, setCollection } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  __name: 'FragenErstellen',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const umfragenCollectionRef = collection(db, 'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen');\n    console.log(\"Umfragenname bei Frage-erstellen \" + sessionStorage.getItem('umfragenName'));\n    const addFrage = async () => {\n      console.log(\"\");\n      const umfrageDocRef = doc(umfragenCollectionRef, sessionStorage.getItem('umfragenName'));\n      const fragenCollectionRef = collection(umfrageDocRef, 'Fragen');\n      console.log(\"FragenCollectionRef: \" + fragenCollectionRef);\n      const answers = (fragenCollectionRef, {\n        question: frageFragestellung.value,\n        options: frageAntwortoptionen.value\n      });\n      const frageUndAntworten = collection(fragenCollectionRef, answers.value);\n      await setCollection(frageUndAntworten);\n    };\n    const sessionReset = () => {\n      sessionStorage.removeItem('umfragenName');\n    };\n    const __returned__ = {\n      umfragenCollectionRef,\n      addFrage,\n      sessionReset,\n      ref,\n      computed,\n      onMounted,\n      resolveDirective,\n      get doc() {\n        return doc;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get collection() {\n        return collection;\n      },\n      get setDoc() {\n        return setDoc;\n      },\n      get setCollection() {\n        return setCollection;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","resolveDirective","doc","addDoc","collection","setDoc","setCollection","db","umfragenCollectionRef","sessionStorage","getItem","console","log","addFrage","umfrageDocRef","fragenCollectionRef","answers","question","frageFragestellung","value","options","frageAntwortoptionen","frageUndAntworten","sessionReset","removeItem"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/FragenErstellen.vue"],"sourcesContent":["<template>\n      <div>\n    <h1>Fragen erstellen</h1>\n    <form>\n      <div>\n        <label>Fragestellung:</label>\n        <input type=\"text\" v-model=\"frageFragestellung\">\n      </div>\n      <br>\n      <div>\n        <label>Antwortoptionen:</label>\n        <input type=\"text\" v-model=\"frageAntwortoptionen\">\n      </div>\n      <br>\n      <button @click=\"addFrage()\">Frage hinzufügen</button>\n    </form>\n\n    <button  @click=\"this.$router.push('/'), sessionReset()\">Fertig (SessionStorage löschen!)</button>\n  </div>\n</template>\n\n<script setup>\n  import { ref, computed, onMounted, resolveDirective } from 'vue'\n  import { doc, addDoc, collection, setDoc, setCollection} from 'firebase/firestore';\n  import { db } from '@/firebase'\n  const umfragenCollectionRef = collection(db, 'AlleUmfragen', sessionStorage.getItem('EMailAdmin'), 'Umfragen')\n  console.log(\"Umfragenname bei Frage-erstellen \"+ sessionStorage.getItem('umfragenName'))\n  const addFrage = async () => {\n    console.log(\"\")\n    const umfrageDocRef = doc(umfragenCollectionRef, sessionStorage.getItem('umfragenName'))\n        const fragenCollectionRef = collection(umfrageDocRef, 'Fragen')\n        console.log(\"FragenCollectionRef: \" + fragenCollectionRef)\n        const answers = (fragenCollectionRef, {\n            question: frageFragestellung.value,\n            options: frageAntwortoptionen.value\n        })\n        const frageUndAntworten = collection(fragenCollectionRef, answers.value)\n        await setCollection(frageUndAntworten)\n    }\n\n    const sessionReset = () => {\n        sessionStorage.removeItem('umfragenName')\n    }\n</script>"],"mappings":"AAsBE,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,KAAK;AAChE,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,EAAEC,aAAa,QAAO,oBAAoB;AAClF,SAASC,EAAE,QAAQ,YAAY;;;;;;;IAC/B,MAAMC,qBAAqB,GAAGJ,UAAU,CAACG,EAAE,EAAE,cAAc,EAAEE,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC;IAC9GC,OAAO,CAACC,GAAG,CAAC,mCAAmC,GAAEH,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACxF,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BF,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;MACf,MAAME,aAAa,GAAGZ,GAAG,CAACM,qBAAqB,EAAEC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;MACpF,MAAMK,mBAAmB,GAAGX,UAAU,CAACU,aAAa,EAAE,QAAQ,CAAC;MAC/DH,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGG,mBAAmB,CAAC;MAC1D,MAAMC,OAAO,IAAID,mBAAmB,EAAE;QAClCE,QAAQ,EAAEC,kBAAkB,CAACC,KAAK;QAClCC,OAAO,EAAEC,oBAAoB,CAACF;MAClC,CAAC,CAAC;MACF,MAAMG,iBAAiB,GAAGlB,UAAU,CAACW,mBAAmB,EAAEC,OAAO,CAACG,KAAK,CAAC;MACxE,MAAMb,aAAa,CAACgB,iBAAiB,CAAC;IAC1C,CAAC;IAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACvBd,cAAc,CAACe,UAAU,CAAC,cAAc,CAAC;IAC7C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}