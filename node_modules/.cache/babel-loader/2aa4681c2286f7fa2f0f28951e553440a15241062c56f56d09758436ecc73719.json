{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Übersicht aller Umfragen\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.umfragen, (umfragenarray, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(umfragenarray, umfrage => {\n      return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n        onClick: $event => ($setup.writeToSessionStorage(umfrage, $setup.hilfeAdmins[index][0]), this.$router.push('/beantworten'))\n      }, [_createTextVNode(_toDisplayString(umfrage) + \" - \" + _toDisplayString($setup.hilfeAdmins[index][0]) + \" \", 1 /* TEXT */), _createCommentVNode(\" irgendwie müssen wir hier diese beiden Werte mitgeben, damit bei der Beantwortung die richtige Route ausgewählt wird.\")], 8 /* PROPS */, _hoisted_2)]);\n    }), 256 /* UNKEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","$setup","umfragen","umfragenarray","index","key","umfrage","onClick","$event","writeToSessionStorage","hilfeAdmins","$router","push","_toDisplayString","_createCommentVNode"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/UmfragenÜbersichtUser.vue"],"sourcesContent":["<template>\n    <h1>Übersicht aller Umfragen</h1>\n    <div v-for=\"(umfragenarray, index) in umfragen\" :key=\"index\">\n      <div v-for=\"(umfrage) in umfragenarray\" >\n        <button @click=\"writeToSessionStorage(umfrage, hilfeAdmins[index][0]), this.$router.push('/beantworten')\">\n          {{ umfrage }} - {{ hilfeAdmins[index][0]}}\n          <!-- irgendwie müssen wir hier diese beiden Werte mitgeben, damit bei der Beantwortung die richtige Route ausgewählt wird.-->\n        </button>\n      </div>\n    </div>\n</template>\n  \n<script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, updateDoc, FieldValue, arrayUnion, getFirestore} from 'firebase/firestore';\n    import { db } from '@/firebase'\n \n    const umfragenCollectionRef = collection(db,'AlleUmfragen')\n    const admins = ref([])\n    const umfragen = ref([])\n    const hilfeAdmins = ref([])\n\n    onMounted(() => {\n    onSnapshot(umfragenCollectionRef, (querySnapshot) => {\n      const allAdmins = []\n      const allSurveys = []\n      querySnapshot.forEach((doc) => {\n        console.log(\"All Aminds \" + doc.id)\n        allAdmins.push(doc.id)\n        console.log(\"allAdmins\" + allAdmins)\n      })\n      admins.value = allAdmins\n      console.log(\"Admins.value \" + admins.value)\n      admins.value.forEach((admin, index) => {\n        const adminCollectionRef = collection(db, 'AlleUmfragen', admin, 'Umfragen')\n        console.log(\"Admincollectionref \" + adminCollectionRef)\n        onSnapshot(adminCollectionRef, (querySnapshot) => {\n          const surveys = []\n          const helper = []\n          querySnapshot.forEach((doc) => {\n            surveys.push(doc.id)\n            helper.push(admin)\n          })\n          hilfeAdmins.value[index] = helper\n          umfragen.value[index] = surveys\n          console.log(\"Hilfe Admins: \" + hilfeAdmins.value)\n          console.log(\"umfragen.value: \" + umfragen.value)\n          console.log(\"Admins: \" + admins.value)\n        })\n      })\n    })\n  })\n\n    const writeToSessionStorage = (umfrage, admin) => {\n        sessionStorage.setItem('umfrageBeantworten', umfrage);\n        sessionStorage.setItem('adminBeantworten', admin);\n    }\n</script>"],"mappings":";;gCACIA,mBAAA,CAAiC,YAA7B,0BAAwB;;;6DAA5BC,UAAiC,G,kBACjCC,mBAAA,CAOMC,SAAA,QAAAC,WAAA,CAPgCC,MAAA,CAAAC,QAAQ,GAAjCC,aAAa,EAAEC,KAAK;yBAAjCN,mBAAA,CAOM;MAP2CO,GAAG,EAAED;IAAK,K,kBACzDN,mBAAA,CAKMC,SAAA,QAAAC,WAAA,CALmBG,aAAa,EAAzBG,OAAO;2BAApBR,mBAAA,CAKM,cAJJF,mBAAA,CAGS;QAHAW,OAAK,EAAAC,MAAA,KAAEP,MAAA,CAAAQ,qBAAqB,CAACH,OAAO,EAAEL,MAAA,CAAAS,WAAW,CAACN,KAAK,YAAYO,OAAO,CAACC,IAAI;4CACnFN,OAAO,IAAG,KAAG,GAAAO,gBAAA,CAAGZ,MAAA,CAAAS,WAAW,CAACN,KAAK,QAAM,GAC1C,iBAAAU,mBAAA,0HAA6H,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}