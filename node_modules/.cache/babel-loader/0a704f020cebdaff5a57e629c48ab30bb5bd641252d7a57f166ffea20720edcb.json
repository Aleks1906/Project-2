{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, resolveDirective } from 'vue';\nimport { collection, onSnapshot, doc, addDoc, updateDoc, FieldValue, arrayUnion, getFirestore, getDocs } from 'firebase/firestore';\nimport { db } from '@/firebase';\nexport default {\n  __name: 'ErstelleUmfrageAusTemplate',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const templateCollectionRef = collection(db, 'Templates');\n    const templates = ref([]);\n    const fragen = ref([]);\n    const hilfeTemplates = ref([]);\n    onMounted(() => {\n      onSnapshot(templateCollectionRef, querySnapshot => {\n        const helperTemplates = [];\n        querySnapshot.forEach(doc => {\n          helperTemplates.push(doc.id);\n        });\n        templates.value = helperTemplates;\n        templates.value.forEach((template, index) => {\n          const fragenInTemplateRef = collection(db, 'Templates', template, 'Fragen');\n          onSnapshot(fragenInTemplateRef, querySnapshot => {\n            const questions = [];\n            const helper = [];\n            querySnapshot.forEach(doc => {\n              questions.push(doc.data().question);\n              console.log(doc.data().question);\n            });\n            hilfeTemplates.value[index] = helper;\n            fragen.value[index] = questions;\n            console.log(fragen.value);\n          });\n        });\n      });\n    });\n    const createFrageInFirebase = async template => {\n      sessionStorage.setItem('ausgewähltesTemplate', template);\n      const ausgewähltesTemplate = sessionStorage.getItem('ausgewähltesTemplate');\n      const umfragenName = sessionStorage.getItem('umfragenName');\n      const EMailAdmin = sessionStorage.getItem('EMailAdmin');\n      const zielRef = collection(db, 'AlleUmfragen', EMailAdmin, 'Umfragen', umfragenName, 'Fragen');\n      const quellenRef = collection(db, 'Templates', ausgewähltesTemplate, 'Fragen');\n      const querySnapshot = await getDocs(quellenRef);\n      querySnapshot.forEach(doc => {\n        // create new document in destination collection with same data\n        addDoc(zielRef, doc.data());\n      });\n    };\n    const __returned__ = {\n      templateCollectionRef,\n      templates,\n      fragen,\n      hilfeTemplates,\n      createFrageInFirebase,\n      ref,\n      computed,\n      onMounted,\n      resolveDirective,\n      get collection() {\n        return collection;\n      },\n      get onSnapshot() {\n        return onSnapshot;\n      },\n      get doc() {\n        return doc;\n      },\n      get addDoc() {\n        return addDoc;\n      },\n      get updateDoc() {\n        return updateDoc;\n      },\n      get FieldValue() {\n        return FieldValue;\n      },\n      get arrayUnion() {\n        return arrayUnion;\n      },\n      get getFirestore() {\n        return getFirestore;\n      },\n      get getDocs() {\n        return getDocs;\n      },\n      get db() {\n        return db;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","resolveDirective","collection","onSnapshot","doc","addDoc","updateDoc","FieldValue","arrayUnion","getFirestore","getDocs","db","templateCollectionRef","templates","fragen","hilfeTemplates","querySnapshot","helperTemplates","forEach","push","id","value","template","index","fragenInTemplateRef","questions","helper","data","question","console","log","createFrageInFirebase","sessionStorage","setItem","ausgewähltesTemplate","getItem","umfragenName","EMailAdmin","zielRef","quellenRef"],"sources":["/Users/aleks/Desktop/Git-Projects/Project-2/src/views/ErstelleUmfrageAusTemplate.vue"],"sourcesContent":["<template>\n  <div class=\"view-main-content\">\n    <h1 class=\"view-main-content-heading\">Übersicht aller Templates</h1>\n    <div v-for=\"(template, index) in templates\" :key=\"index\">\n        <h2>{{ template }} </h2> \n        <p>Dieses Template enthält folgende Fragen: </p>\n      <div v-for=\"(frage) in fragen[index]\" >\n        <p>\n            {{ frage}}\n         </p>\n      </div>\n      <button @click=\"createFrageInFirebase(template), this.$router.push('/umfrageWurdeErstellt')\">\n          Dieses Template auswählen\n        </button>\n        <br>\n        ---------------------------------------------------------------------\n    </div>\n  </div>\n</template>\n  \n<script setup>\n    import { ref, computed, onMounted, resolveDirective } from 'vue'\n    import {collection, onSnapshot, doc, addDoc, updateDoc, FieldValue, arrayUnion, getFirestore, getDocs} from 'firebase/firestore';\n    import { db } from '@/firebase'\n \n    const templateCollectionRef = collection(db,'Templates')\n\n    const templates = ref([])\n    const fragen = ref([])\n    const hilfeTemplates = ref([])\n\n    onMounted(() => {\n    onSnapshot(templateCollectionRef, (querySnapshot) => {\n      const helperTemplates = []\n      querySnapshot.forEach((doc) => {\n        helperTemplates.push(doc.id)\n      })\n      templates.value = helperTemplates\n\n      templates.value.forEach((template, index) => {\n        const fragenInTemplateRef = collection(db, 'Templates', template, 'Fragen')\n        onSnapshot(fragenInTemplateRef, (querySnapshot) => {\n          const questions = []\n          const helper = []\n          querySnapshot.forEach((doc) => {\n            questions.push(doc.data().question)\n            console.log(doc.data().question)\n          })\n          hilfeTemplates.value[index] = helper\n          fragen.value[index] = questions\n          console.log(fragen.value)\n        })\n      }) \n    })\n  })\n\n\n    const createFrageInFirebase = async (template) => {\n        sessionStorage.setItem('ausgewähltesTemplate', template);\n        const ausgewähltesTemplate = sessionStorage.getItem('ausgewähltesTemplate')\n        const umfragenName = sessionStorage.getItem('umfragenName')\n        const EMailAdmin = sessionStorage.getItem('EMailAdmin')\n\n        const zielRef = collection(db,'AlleUmfragen', EMailAdmin, 'Umfragen', umfragenName, 'Fragen')\n        const quellenRef = collection(db, 'Templates', ausgewähltesTemplate, 'Fragen')\n\n        const querySnapshot = await getDocs(quellenRef)\n        querySnapshot.forEach((doc) => {\n        // create new document in destination collection with same data\n         addDoc(zielRef, doc.data());\n        });\n    }\n</script>"],"mappings":";AAqBI,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,KAAK;AAChE,SAAQC,UAAU,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,YAAY,EAAEC,OAAO,QAAO,oBAAoB;AAChI,SAASC,EAAE,QAAQ,YAAY;;;;;;;IAE/B,MAAMC,qBAAqB,GAAGV,UAAU,CAACS,EAAE,EAAC,WAAW,CAAC;IAExD,MAAME,SAAS,GAAGf,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMgB,MAAM,GAAGhB,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMiB,cAAc,GAAGjB,GAAG,CAAC,EAAE,CAAC;IAE9BE,SAAS,CAAC,MAAM;MAChBG,UAAU,CAACS,qBAAqB,EAAGI,aAAa,IAAK;QACnD,MAAMC,eAAe,GAAG,EAAE;QAC1BD,aAAa,CAACE,OAAO,CAAEd,GAAG,IAAK;UAC7Ba,eAAe,CAACE,IAAI,CAACf,GAAG,CAACgB,EAAE,CAAC;QAC9B,CAAC,CAAC;QACFP,SAAS,CAACQ,KAAK,GAAGJ,eAAe;QAEjCJ,SAAS,CAACQ,KAAK,CAACH,OAAO,CAAC,CAACI,QAAQ,EAAEC,KAAK,KAAK;UAC3C,MAAMC,mBAAmB,GAAGtB,UAAU,CAACS,EAAE,EAAE,WAAW,EAAEW,QAAQ,EAAE,QAAQ,CAAC;UAC3EnB,UAAU,CAACqB,mBAAmB,EAAGR,aAAa,IAAK;YACjD,MAAMS,SAAS,GAAG,EAAE;YACpB,MAAMC,MAAM,GAAG,EAAE;YACjBV,aAAa,CAACE,OAAO,CAAEd,GAAG,IAAK;cAC7BqB,SAAS,CAACN,IAAI,CAACf,GAAG,CAACuB,IAAI,EAAE,CAACC,QAAQ,CAAC;cACnCC,OAAO,CAACC,GAAG,CAAC1B,GAAG,CAACuB,IAAI,EAAE,CAACC,QAAQ,CAAC;YAClC,CAAC,CAAC;YACFb,cAAc,CAACM,KAAK,CAACE,KAAK,CAAC,GAAGG,MAAM;YACpCZ,MAAM,CAACO,KAAK,CAACE,KAAK,CAAC,GAAGE,SAAS;YAC/BI,OAAO,CAACC,GAAG,CAAChB,MAAM,CAACO,KAAK,CAAC;UAC3B,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAGA,MAAMU,qBAAqB,GAAG,MAAOT,QAAQ,IAAK;MAC9CU,cAAc,CAACC,OAAO,CAAC,sBAAsB,EAAEX,QAAQ,CAAC;MACxD,MAAMY,oBAAoB,GAAGF,cAAc,CAACG,OAAO,CAAC,sBAAsB,CAAC;MAC3E,MAAMC,YAAY,GAAGJ,cAAc,CAACG,OAAO,CAAC,cAAc,CAAC;MAC3D,MAAME,UAAU,GAAGL,cAAc,CAACG,OAAO,CAAC,YAAY,CAAC;MAEvD,MAAMG,OAAO,GAAGpC,UAAU,CAACS,EAAE,EAAC,cAAc,EAAE0B,UAAU,EAAE,UAAU,EAAED,YAAY,EAAE,QAAQ,CAAC;MAC7F,MAAMG,UAAU,GAAGrC,UAAU,CAACS,EAAE,EAAE,WAAW,EAAEuB,oBAAoB,EAAE,QAAQ,CAAC;MAE9E,MAAMlB,aAAa,GAAG,MAAMN,OAAO,CAAC6B,UAAU,CAAC;MAC/CvB,aAAa,CAACE,OAAO,CAAEd,GAAG,IAAK;QAC/B;QACCC,MAAM,CAACiC,OAAO,EAAElC,GAAG,CAACuB,IAAI,EAAE,CAAC;MAC5B,CAAC,CAAC;IACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}